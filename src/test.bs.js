// Generated by ReScript, PLEASE EDIT WITH CARE


function create(param) {
  return {
          expr: param[0],
          desc: param[1]
        };
}

function test(t) {
  return t.expr;
}

function lightRed(x) {
  return "\u001b[91m" + x + "\u001b[39m";
}

function lightGreen(x) {
  return "\u001b[92m" + x + "\u001b[39m";
}

function runAll(xs) {
  var toString = function (t) {
    return "Testing " + t.desc + "... " + (
            t.expr ? "\u001b[92m" + "passed" + "\u001b[39m" : "\u001b[91m" + "failed" + "\u001b[39m"
          );
  };
  var count = xs.length;
  var tests = xs.map(create);
  var failures = tests.map(test).filter(function (y) {
        return !y;
      }).length;
  var descriptions = tests.map(toString);
  console.log("");
  descriptions.forEach(function (x, i) {
        console.log(String(i + 1 | 0) + ". " + x);
        
      });
  console.log("");
  if (failures === 0) {
    console.log("\u001b[92m" + "All tests passed!" + "\u001b[39m");
  } else {
    console.log(lightRed(String(failures) + " out of " + String(count) + " tests failed."));
  }
  console.log("");
  
}

export {
  create ,
  test ,
  lightRed ,
  lightGreen ,
  runAll ,
  
}
/* No side effect */
