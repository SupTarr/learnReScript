// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var bukowski = "If you're going to try, go all the way...";

function printMessage(message) {
  if (message !== undefined) {
    return message;
  } else {
    return "The message is empty";
  }
}

function mapOption(f, opt) {
  if (opt !== undefined) {
    return Caml_option.some(Curry._1(f, Caml_option.valFromOption(opt)));
  }
  
}

function $$double(i) {
  return (i << 1);
}

if (mapOption($$double, undefined) !== undefined) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "chap_4_polymorphic.res",
          575,
          9
        ],
        Error: new Error()
      };
}

if (!Caml_obj.caml_equal(mapOption($$double, 2), 4)) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "chap_4_polymorphic.res",
          577,
          9
        ],
        Error: new Error()
      };
}

if (Belt_Option.map(undefined, $$double) !== undefined) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "chap_4_polymorphic.res",
          595,
          0
        ],
        Error: new Error()
      };
}

if (!Caml_obj.caml_equal(Belt_Option.map(2, $$double), 4)) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "chap_4_polymorphic.res",
          596,
          0
        ],
        Error: new Error()
      };
}

var exampleHTML = {
  TAG: /* Division */0,
  _0: [
    {
      TAG: /* Heading */1,
      _0: [{
          TAG: /* Anchor */3,
          _0: {
            TAG: /* Fragment */0,
            _0: "hello-world"
          },
          _1: "Jump to here"
        }]
    },
    {
      TAG: /* Paragraph */2,
      _0: "Hello, world!"
    },
    {
      TAG: /* Anchor */3,
      _0: {
        TAG: /* MailTo */1,
        _0: "nowhere@mozilla.org"
      },
      _1: "Send email to nowhere"
    }
  ]
};

function hrefToHTML(href) {
  if (href.TAG) {
    return "mailto:" + href._0;
  } else {
    return "#" + href._0;
  }
}

function anchorToHTML(href, displayText) {
  return "<a href=" + hrefToHTML(href) + ">" + displayText + "</a>";
}

function paragraphToHTML(text) {
  return "<p>" + text + "</p>";
}

function renderHTML(html) {
  var aux = function (depth, x) {
    var indent = " ".repeat((depth << 1));
    var toHTML = function (tag, xs) {
      var partial_arg = depth + 1 | 0;
      var innerHTML = Belt_Array.map(xs, (function (param) {
                return aux(partial_arg, param);
              })).join("\n");
      return indent + "<" + tag + ">\n" + innerHTML + "\n" + indent + "</" + tag + ">";
    };
    switch (x.TAG | 0) {
      case /* Division */0 :
          return toHTML("div", x._0);
      case /* Heading */1 :
          return toHTML("h2", x._0);
      case /* Paragraph */2 :
          return indent + paragraphToHTML(x._0);
      case /* Anchor */3 :
          return indent + anchorToHTML(x._0, x._1);
      
    }
  };
  return aux(0, html);
}

var mh = {
  state: "Maharasthra",
  count: 2342
};

var ka = {
  state: "Karnataka",
  count: 745
};

var dl = {
  state: "Delhi",
  count: 385
};

var wb = {
  state: "West Bengal",
  count: 621
};

var jh = {
  state: "Jharkand",
  count: 111
};

var tn = {
  state: "Tamil Nadu",
  count: 770
};

exports.mh = mh;
exports.ka = ka;
exports.dl = dl;
exports.wb = wb;
exports.jh = jh;
exports.tn = tn;
exports.bukowski = bukowski;
exports.printMessage = printMessage;
exports.mapOption = mapOption;
exports.$$double = $$double;
exports.exampleHTML = exampleHTML;
exports.hrefToHTML = hrefToHTML;
exports.anchorToHTML = anchorToHTML;
exports.paragraphToHTML = paragraphToHTML;
exports.renderHTML = renderHTML;
/*  Not a pure module */
