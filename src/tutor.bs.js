// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_array from "../node_modules/.pnpm/bs-platform@8.3.3/node_modules/bs-platform/lib/es6/caml_array.js";

var sumOfFloats = 1 + 2.2 + 3.14;

var bookName = "Deep Work";

var tagline = "Rules for Focused Success in a Distracted World";

var book2 = "Real World OCaml: Functional programming for the masses";

var book = "Deep Work: Rules for Focused Success in a Distracted World";

function bookFormatToString(format) {
  switch (format) {
    case /* Hardcover */0 :
        return "Hardcover";
    case /* Paperback */1 :
        return "Paperback";
    case /* KindleEdition */2 :
        return "Kindle Edition";
    
  }
}

function isElectronic(format) {
  return format >= 2;
}

function nextMoveBy(current) {
  switch (current) {
    case /* PlayerA */0 :
        return /* PlayerB */1;
    case /* PlayerB */1 :
        return /* PlayerC */2;
    case /* PlayerC */2 :
        return /* PlayerA */0;
    
  }
}

var secondMove = nextMoveBy(/* PlayerA */0);

var thirdMove = nextMoveBy(secondMove);

function displayName(user) {
  if (typeof user === "number") {
    return "Anonymous";
  }
  switch (user.TAG | 0) {
    case /* Guest */0 :
        return "Guest#" + String(user._0);
    case /* LoggedInUser */1 :
    case /* Moderator */2 :
        break;
    
  }
  return user._1 + ", " + String(user._0) + " points";
}

var anonymous = displayName(/* Anonymous */0);

var guest42 = displayName({
      TAG: /* Guest */0,
      _0: 42
    });

var milner1934 = displayName({
      TAG: /* LoggedInUser */1,
      _0: 2010,
      _1: "Robin Milner"
    });

var grace1906 = displayName({
      TAG: /* Moderator */2,
      _0: 1992,
      _1: "Grace Hopper"
    });

function formInputToHTML(x) {
  if (typeof x === "number") {
    return "<input type=\"submit\" />";
  }
  switch (x.TAG | 0) {
    case /* Text */0 :
        return "<input type=\"text\" name=\"" + x._0 + "\" />";
    case /* Number */1 :
        return "<input type=\"number\" name=\"" + x._0 + "\" min=\"" + String(x._1) + " max=\"" + String(x._2) + "\"/>";
    case /* Email */2 :
        return "<input type=\"email\" name=\"" + x._0 + "\" />";
    
  }
}

var nameInput = formInputToHTML({
      TAG: /* Text */0,
      _0: "name"
    });

var ageInput = formInputToHTML({
      TAG: /* Number */1,
      _0: "age",
      _1: 18,
      _2: 25
    });

var emailInput = formInputToHTML({
      TAG: /* Email */2,
      _0: "email"
    });

var name = "age-limit";

var ageLimit = [
  name,
  18,
  25
];

var label = "price-range";

var budget2 = [
  label,
  400,
  2500
];

function toNumberFormHTML(input) {
  return "<input type=\"number\" name=\"" + input[0] + "\" min=\"" + String(input[1]) + "\" max=\"" + String(input[2]) + "\"";
}

function toNumberFormHTML2(param) {
  return "<input type=\"number\" name=\"" + param[0] + "\" min=\"" + String(param[1]) + "\" max=\"" + String(param[2]) + "\"";
}

var atom = {
  name: "Atom",
  url: "https://atom.io",
  repositories: 255,
  people: 56
};

var node = {
  name: "Node.js",
  url: "https://nodejs.org",
  repositories: 182,
  people: 375
};

var rails = {
  name: "Ruby on Rails",
  url: "https://rubyonrails.org",
  repositories: 99,
  people: 66
};

function projectLink(param) {
  return "<a href=\"" + param.url + "\">" + param.name + "</a>";
}

projectLink(atom);

projectLink(node);

projectLink(rails);

var codersAtWork = {
  title: "Coders at Work",
  tagline: "Reflections on the Craft of Programming",
  format: /* Paperback */1,
  availableInStock: 10
};

function bookHTML(book) {
  var count = String(book.availableInStock);
  return "<div>\n    <h2>" + book.title + ": " + book.tagline + "</h2>\n    <p>" + count + " new " + bookFormatToString(book.format) + " avialable in stock</p>\n  </div>";
}

bookHTML(codersAtWork);

function drawRectangle(_rectangle) {
  
}

function drawLine(_line) {
  
}

function drawText(_text) {
  
}

function drawShape(shape) {
  switch (shape.TAG | 0) {
    case /* Rectangle */0 :
    case /* Line */1 :
    case /* Text */2 :
        return ;
    
  }
}

var center = [
  960,
  540
];

var leroy = [
  "Xavier",
  "Leroy"
];

var mediumFontSize = [
  "font-size",
  "16px"
];

function first(param) {
  return param[0];
}

function second(param) {
  return param[1];
}

first(center);

first(leroy);

first(mediumFontSize);

second(center);

second(leroy);

second(mediumFontSize);

var lineFromOrigin = [
  [
    0,
    0
  ],
  [
    100,
    100
  ]
];

var lineStart = first(lineFromOrigin);

var lineStartX = first(lineStart);

var listStartY = second(lineStart);

var lineEnd = second(lineFromOrigin);

var lineEndX = first(lineEnd);

var lineEndY = second(lineEnd);

var progLangCreators = [
  [
    "Java",
    "James Gosling"
  ],
  [
    "C",
    "Dennis Ritchie"
  ],
  [
    "Python",
    "Guido van Rossum"
  ],
  [
    "PHP",
    "Rasmus Lerdorf"
  ],
  [
    "Perl",
    "Larry Wall"
  ],
  [
    "JavaScript",
    "Brendan Eich"
  ],
  [
    "Ruby",
    "Yukihiro Matsumoto"
  ],
  [
    "Lisp",
    "John McCarthy"
  ],
  [
    "Pascal",
    "Niklaus Wirth"
  ]
];

var arrayLength = progLangCreators.length;

var arrayFirstItem = Caml_array.get(progLangCreators, 0);

var arrayLastItem = Caml_array.get(progLangCreators, arrayLength - 1 | 0);

console.log(arrayLastItem);

function progLangCreatorToString(param) {
  return param[0] + ": " + param[1];
}

progLangCreators.map(function (x) {
      return x;
    });

progLangCreators.map(progLangCreatorToString);

progLangCreators.filter(function (x) {
      return x[0].startsWith("P");
    });

var hello = "Hello, World!";

var goodbye = "Goodbye!";

var runningTotal = 1;

var sumOfInts = 10;

var joinedStrings = "Hello, World!";

var two = 2;

var one = 1;

var three = 3;

var bookFormat2 = "Kindle Edition";

var firstMove = /* PlayerA */0;

var submit = "<input type=\"submit\" />";

var min = 18;

var max = 25;

var budget = [
  "price-range",
  500,
  1500
];

var ratingFilter = [
  "rating-3-and-above",
  3,
  5
];

var low = 500;

var high = 1500;

var block1 = {
  TAG: /* Rectangle */0,
  _0: {
    x: 100,
    y: 100,
    width: 50,
    height: 50
  }
};

var block2 = {
  TAG: /* Rectangle */0,
  _0: {
    x: 200,
    y: 100,
    width: 50,
    height: 50
  }
};

var block1ToBlock2 = {
  TAG: /* Line */1,
  _0: {
    x: 150,
    y: 125,
    length: 50
  }
};

var textLabel = {
  TAG: /* Text */2,
  _0: {
    text: "Connect",
    fontSize: /* Medium */1,
    fontFamily: /* Monospace */2
  }
};

export {
  hello ,
  goodbye ,
  runningTotal ,
  sumOfInts ,
  sumOfFloats ,
  joinedStrings ,
  bookName ,
  tagline ,
  book2 ,
  book ,
  two ,
  one ,
  three ,
  bookFormatToString ,
  bookFormat2 ,
  isElectronic ,
  nextMoveBy ,
  firstMove ,
  secondMove ,
  thirdMove ,
  displayName ,
  anonymous ,
  guest42 ,
  milner1934 ,
  grace1906 ,
  formInputToHTML ,
  nameInput ,
  ageInput ,
  emailInput ,
  submit ,
  name ,
  min ,
  max ,
  ageLimit ,
  budget ,
  ratingFilter ,
  label ,
  low ,
  high ,
  budget2 ,
  toNumberFormHTML ,
  toNumberFormHTML2 ,
  atom ,
  node ,
  rails ,
  projectLink ,
  codersAtWork ,
  bookHTML ,
  drawRectangle ,
  drawLine ,
  drawText ,
  block1 ,
  block2 ,
  block1ToBlock2 ,
  textLabel ,
  drawShape ,
  center ,
  leroy ,
  mediumFontSize ,
  first ,
  second ,
  lineFromOrigin ,
  lineStart ,
  lineStartX ,
  listStartY ,
  lineEnd ,
  lineEndX ,
  lineEndY ,
  progLangCreators ,
  arrayLength ,
  arrayFirstItem ,
  arrayLastItem ,
  progLangCreatorToString ,
  
}
/*  Not a pure module */
