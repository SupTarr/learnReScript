// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");

var exampleHTML = {
  TAG: /* Division */0,
  _0: [
    {
      TAG: /* Heading */1,
      _0: [{
          TAG: /* Anchor */3,
          _0: {
            TAG: /* Fragment */0,
            _0: "hello-world"
          },
          _1: "Jump to here"
        }]
    },
    {
      TAG: /* Paragraph */2,
      _0: "Hello, world!"
    },
    {
      TAG: /* Anchor */3,
      _0: {
        TAG: /* MailTo */1,
        _0: "nowhere@mozilla.org"
      },
      _1: "Send email to nowhere"
    }
  ]
};

function hrefToHTML(href) {
  if (href.TAG) {
    return "mailto:" + href._0;
  } else {
    return "#" + href._0;
  }
}

function anchorToHTML(href, displayText) {
  return "<a href=" + hrefToHTML(href) + ">" + displayText + "</a>";
}

function paragraphToHTML(text) {
  return "<p>" + text + "</p>";
}

function renderHTML(html) {
  var aux = function (depth, x) {
    var indent = " ".repeat((depth << 1));
    var toHTML = function (tag, xs) {
      var partial_arg = depth + 1 | 0;
      var innerHTML = Belt_Array.map(xs, (function (param) {
                return aux(partial_arg, param);
              })).join("\n");
      return indent + "<" + tag + ">\n" + innerHTML + "\n" + indent + "</" + tag + ">";
    };
    switch (x.TAG | 0) {
      case /* Division */0 :
          return toHTML("div", x._0);
      case /* Heading */1 :
          return toHTML("h2", x._0);
      case /* Paragraph */2 :
          return indent + paragraphToHTML(x._0);
      case /* Anchor */3 :
          return indent + anchorToHTML(x._0, x._1);
      
    }
  };
  return aux(0, html);
}

exports.exampleHTML = exampleHTML;
exports.hrefToHTML = hrefToHTML;
exports.anchorToHTML = anchorToHTML;
exports.paragraphToHTML = paragraphToHTML;
exports.renderHTML = renderHTML;
/* No side effect */
